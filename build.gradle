plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

group = 'kz.hxncus.mc'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation("org.bstats:bstats-bukkit:3.0.2")

    // Local Includes
    implementation fileTree(dir: 'libs', include: '*.jar')
    compileOnly fileTree(dir: 'libs/compileOnly', include: '*.jar')

    compileOnly "org.spigotmc:spigot-api:1.20.3-R0.1-SNAPSHOT"

    implementation 'com.zaxxer:HikariCP:4.0.3'
    implementation 'org.jooq:jooq:3.14.16'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

shadowJar {
    relocate("org.bstats", group + ".simplehandcuff.libs.bstats")
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 8

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
